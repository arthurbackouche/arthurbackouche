"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[90],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>C});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=u(n),h=a,C=m["".concat(l,".").concat(h)]||m[h]||d[h]||i;return n?o.createElement(C,r(r({ref:t},s),{},{components:n})):o.createElement(C,r({ref:t},s))}));function C(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=h;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[m]="string"==typeof e?e:a,r[1]=c;for(var u=2;u<i;u++)r[u]=n[u];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3422:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var o=n(7462),a=(n(7294),n(3905));const i={description:"Phone numbers must be formated in a specific way to be used with Mobile Connect."},r="How to format phone number in Mobile connect with SFMC",c={unversionedId:"SFMC SQL/How to Format Phone Number for Mobile Connect in SFMC",id:"SFMC SQL/How to Format Phone Number for Mobile Connect in SFMC",title:"How to format phone number in Mobile connect with SFMC",description:"Phone numbers must be formated in a specific way to be used with Mobile Connect.",source:"@site/docs/SFMC SQL/How to Format Phone Number for Mobile Connect in SFMC.md",sourceDirName:"SFMC SQL",slug:"/SFMC SQL/How to Format Phone Number for Mobile Connect in SFMC",permalink:"/docs/SFMC SQL/How to Format Phone Number for Mobile Connect in SFMC",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/SFMC SQL/How to Format Phone Number for Mobile Connect in SFMC.md",tags:[],version:"current",frontMatter:{description:"Phone numbers must be formated in a specific way to be used with Mobile Connect."},sidebar:"tutorialSidebar",previous:{title:"SFMC SQL",permalink:"/docs/category/sfmc-sql"},next:{title:"How to copy records from a Data extension to another DE with an SQL Query",permalink:"/docs/SFMC SQL/Transfer records from a Data Extension to another Data Extension with SQL"}},l={},u=[{value:"Mobile Connect Requirments.",id:"mobile-connect-requirments",level:2},{value:"Create the MobileConnectReady Data Extension.",id:"create-the-mobileconnectready-data-extension",level:2},{value:"Create a new Automation in Automation Studio.",id:"create-a-new-automation-in-automation-studio",level:2},{value:"Configure SQL Query in Automation Studio.",id:"configure-sql-query-in-automation-studio",level:2},{value:"Code the SQL Query.",id:"code-the-sql-query",level:2},{value:"Select a Target Data Extension.",id:"select-a-target-data-extension",level:2},{value:"Test and Activate the Automation.",id:"test-and-activate-the-automation",level:2}],s={toc:u};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"how-to-format-phone-number-in-mobile-connect-with-sfmc"},"How to format phone number in Mobile connect with SFMC"),(0,a.kt)("p",null,"We are learning how to implement an automation in SFMC to reformat the mobile number to the correct format on SFMC Contacts."),(0,a.kt)("h2",{id:"mobile-connect-requirments"},"Mobile Connect Requirments."),(0,a.kt)("p",null,"Mobile connect only accept Mobile numbers that have specific formats such as 61431123456. Here are the few requirements: "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"No proceeding + symbol"),(0,a.kt)("li",{parentName:"ol"},"Country code, i.e for Australia: 61"),(0,a.kt)("li",{parentName:"ol"},"Mobile number with no spaces"),(0,a.kt)("li",{parentName:"ol"},"No proceeding 0 on the mobile number (i.e. not 610431123456)")),(0,a.kt)("h2",{id:"create-the-mobileconnectready-data-extension"},"Create the MobileConnectReady Data Extension."),(0,a.kt)("p",null,"In Contact Builder, create a new Data Extension 'MobileConnectReady'. This Data Extension must be senddable and contains the fields 'Locale', 'MobilePhone' on top of your generic fields. "),(0,a.kt)("p",null,"Here's an example of the fields from MobileConnectReady Data Extension:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[ObjectType]\n[MobilePhone]\n[Locale]\n[FirstName]\n[LastName]\n[PostCode]\n[State]\n[ContactKey]\n")),(0,a.kt)("h2",{id:"create-a-new-automation-in-automation-studio"},"Create a new Automation in Automation Studio."),(0,a.kt)("p",null,"Once your MobileConnectReady Data Extension is created, navigate to Automation Studio and create a new Automation.\nAs this is a scheduled automation we will Drag&Drop the widget Schedule in the Canvas. We will set-up the automation every 1 Hour and we will specify that this automation should never ends."),(0,a.kt)("h2",{id:"configure-sql-query-in-automation-studio"},"Configure SQL Query in Automation Studio."),(0,a.kt)("p",null,"Now that your added the Starting Source of your automation you can Drag&Drop the SQL Query activity in the canvas and click 'Create Activity', give it a name and an external key."),(0,a.kt)("h2",{id:"code-the-sql-query"},"Code the SQL Query."),(0,a.kt)("p",null,"We can now create the SQL Query that will process the data within the Automation. Below here's the SQL Query that you can use (make sure to adapt it to you own usecase)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"SELECT\n    a.Id,\n    'Contact' AS ObjectType,\n    CASE\n        WHEN REPLACE(REPLACE(REPLACE(COALESCE(a.MobilePhone,a.Phone),'+',''),' ',''),'-','') LIKE ('614[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')\n        THEN REPLACE(REPLACE(REPLACE(COALESCE(a.MobilePhone,a.Phone),'+',''),' ',''),'-','')\n        WHEN REPLACE(REPLACE(REPLACE(COALESCE(a.MobilePhone,a.Phone),'+',''),' ',''),'-','') LIKE ('04[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')\n        THEN '61' + SUBSTRING(REPLACE(REPLACE(REPLACE(COALESCE(a.MobilePhone,a.Phone),'+',''),' ',''),'-',''),2,9)\n    END AS MobilePhone,\n    CASE\n        WHEN    REPLACE(REPLACE(REPLACE(COALESCE(a.MobilePhone,a.Phone),'+',''),' ',''),'-','') LIKE ('614[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]') or\n                REPLACE(REPLACE(REPLACE(COALESCE(a.MobilePhone,a.Phone),'+',''),' ',''),'-','') LIKE ('04[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')\n        THEN 'AU'\n    END AS Locale,\n    CAST(a.FirstName AS VARCHAR(50)) AS FirstName,\n    CAST(a.LastName AS VARCHAR(80)) AS LastName,\n    CAST(a.MailingPostalCode AS VARCHAR(50)) AS PostCode,\n    CAST(a.MailingState AS VARCHAR(50)) AS State,\n    a.Id AS ContactKey\nFROM\n    ContactsSF a WITH (NOLOCK)\nWHERE\n    REPLACE(REPLACE(REPLACE(COALESCE(a.MobilePhone,a.Phone),'+',''),' ',''),'-','') LIKE ('614[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]') OR\n    REPLACE(REPLACE(REPLACE(COALESCE(a.MobilePhone,a.Phone),'+',''),' ',''),'-','') LIKE ('04[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')\n")),(0,a.kt)("p",null,"In this SQL Query we are checking the data extension that contains the contact details (ContactsSF in our case).\nWe are then checking the 'MobilePhone' column of the data extension and making sure it is matching with the Australian phone number pattern. If it does, then we are removing the characters that we don't want such as '+', '-' etc.\nThen we are are adding the value 'AU' in the locale of our target Data Extension 'MobileConnectReady'.\nFinaly, we are inserting the remaining columns from 'ContactsSF' to 'MobileConnectReady' by using CAST."),(0,a.kt)("p",null,"We can now validate the SQL Query and click 'Next'."),(0,a.kt)("h2",{id:"select-a-target-data-extension"},"Select a Target Data Extension."),(0,a.kt)("p",null,"I can now select the Data Extension MobileConnectReady as Target and choose Overwrite as a method to upload my data so that I make sure the records will be always up-to-date."),(0,a.kt)("h2",{id:"test-and-activate-the-automation"},"Test and Activate the Automation."),(0,a.kt)("p",null,"Finaly, I can Save my automation give it a name and click on 'Run Once' to test it.\nOnce the test is successful (Green SQL Query icon in the Activity Tab) I can Activate my Automation.\nThe formated MobileConnect Mobile Numbers can be found in the Data Extension MobileConnectReady."))}m.isMDXComponent=!0}}]);